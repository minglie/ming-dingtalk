const querystring = require('querystring');const Provider = require('./provider'); class UserService extends Provider {    /**     * 构造函数     * @param {Object} opts 更多配置项     */    constructor(opts) {        super(opts);    }     /**      * 请求参数构造器      * 将基础参数进行封装, 用于适配suqin.fetch()      * @param {Object} opts 基础参数      */     async fg(opts = {}) {         return {             method: opts.method ? opts.method.toLowerCase() : 'get',             url: `${opts.url}?${querystring.stringify({                 access_token: await this.token,                 ...opts.query,             })}`,             headers: opts.headers || {},             data: opts.data,         };     }    /* eslint-disable class-methods-use-this */    get readAPIs() {        return {           //获取用户详情            async get(opts = { userid: 1 ,lang:"zh_CN"}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/get`,                    query: opts,                }));            },            //获取部门用户userid列表            async getDeptMember(opts = { deptId: 1}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/getDeptMember`,                    query: opts,                }));            },            //获取部门用户            async simplelist(opts = {department_id: 1,offset:0,size:5}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/simplelist`,                    query: opts,                }));            },            //获取部门用户详情            async listbypage(opts = {department_id: 1,offset:0,size:5}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/listbypage`,                    query: opts,                }));            },            /**             * 获取部门用户             */            async readMembers(opts = { department_id: 1 }) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/list`,                    query: opts,                }));            },            /**             * 查询成员详情             * @param {String} id   成员ID             * @param {Object} opts 其余参数             */            async readMember(id, opts = {}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/user/get`,                    query: { ...opts, userid: id },                }));            },            /**             * 查询群组列表             * @param {String} id 父部门id             * @param {Object} opts 其余参数             */            async readGroups(id, opts = {}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/department/list`,                    query: { ...opts, id },                }));            },            /**             * 查询群组详情             * @param {String} id 父部门id             * @param {Object} opts 其余参数             */            async readGroup(id, opts = {}) {                return this.fetch(await this.fg({                    url: `${this._apiHost}/department/get`,                    query: { ...opts, id },                }));            },        };    }    get writeAPIs() {        return {            /**             * 创建成员             * @param {Object} member 成员             * @param {Object} opts   其余参数             */            async createMember(member, opts = {}) {                return this.fetch(await this.fg({                    method: 'POST',                    url: `${this._apiHost}/user/create`,                    query: opts,                    data: member,                }));            },            /**             * 删除成员             * @param {String} id   成员ID             * @param {Object} opts 其余参数             */            async deleteMember(id, opts = {}) {                return this.fetch(await this.fg({                    method: 'GET',                    url: `${this._apiHost}/user/delete`,                    query: { ...opts, userid: id },                }));            },            /**             * 修改成员             * @param {String} id     成员ID             * @param {Object} member 成员             */            async updateMember(id, member, opts = {}) {                return this.fetch(await this.fg({                    method: 'POST',                    url: `${this._apiHost}/user/update`,                    query: opts,                    data: { ...member, userid: id },                }));            },            /**             * 创建群组             * @param {Object} group 群组             * @param {Object} opts  其余参数             */            async createGroup(group, opts = {}) {                return this.fetch(await this.fg({                    method: 'POST',                    url: `${this._apiHost}/department/create`,                    query: opts,                    data: group,                }));            },            /**             * 删除群组             * @param {String} id   群组ID             * @param {Object} opts 其余参数             */            async deleteGroup(id, opts = {}) {                return this.fetch(await this.fg({                    method: 'GET',                    url: `${this._apiHost}/department/delete`,                    query: { ...opts, id },                }));            },            /**             * 修改群组             * @param {Object} id    群组ID             * @param {Object} group 群组             * @param {Object} opts  其余参数             */            async updateGroup(id, group, opts = {}) {                return this.fetch(await this.fg({                    method: 'POST',                    url: `${this._apiHost}/department/update`,                    query: opts,                    data: { ...group, id },                }));            },        };    }    /* eslint-enable class-methods-use-this */};module.exports =UserService;